{"version":3,"sources":["components/partials/Navbar.tsx","components/todo/Todo.tsx","components/todo/TaskList.tsx","components/todo/NewTodo.tsx","components/App.tsx","reportWebVitals.js","index.js","assets/img/logo.png"],"names":["Navbar","react_default","a","createElement","className","type","data-mdb-toggle","data-mdb-target","aria-controls","aria-expanded","aria-label","id","src","logo","alt","height","aria-current","href","rel","target","Todo","_ref","item","list","setList","_useState","useState","_useState2","Object","slicedToArray","completed","setCompleted","_useState3","_useState4","buttonClass","setButtonClass","concat","style","width","minHeight","maxWidth","timeline","toString","title","description","onClick","filter","todo","done","Swal","fire","showConfirmButton","showDenyButton","showCancelButton","denyButtonText","then","result","isDenied","TaskList","props","drawTodo","map","index","key","minWidth","length","NewTodo","addItem","setDescription","setTitle","timelineRef","useRef","onSubmit","e","preventDefault","current","Error","Date","value","toDateString","maxHeight","htmlFor","onChange","rows","ref","name","disabled","App","newItem","toConsumableArray","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","module","exports","p"],"mappings":"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","file":"static/js/main.d728cd1f.chunk.js","sourcesContent":["import React from \"react\"\r\nimport logo from '../../assets/img/logo.png'\r\n\r\nexport default function Navbar() {\r\n   return (\r\n      <header>\r\n         <nav className=\"navbar navbar-expand-lg navbar-light bg-black\">\r\n            <div className=\"container-fluid\">\r\n               <button\r\n                  className=\"navbar-toggler\"\r\n                  type=\"button\"\r\n                  data-mdb-toggle=\"collapse\"\r\n                  data-mdb-target=\"#navbarExample01\"\r\n                  aria-controls=\"navbarExample01\"\r\n                  aria-expanded=\"false\"\r\n                  aria-label=\"Toggle navigation\"\r\n               >\r\n                  <i className=\"fas fa-bars\"></i>\r\n               </button>\r\n               <div className=\"collapse navbar-collapse\" id=\"navbarExample01\">\r\n               <img src={logo} alt=\"logo\" height={30} />\r\n                  <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                     <li className=\"nav-item active\">\r\n                        <a className=\"nav-link text-white\" aria-current=\"page\" href=\"/\">Home</a>\r\n                     </li>\r\n                     <li className=\"nav-item\">\r\n                        <a className=\"nav-link text-white\" href=\"https://github.com/tizor98\" rel=\"noreferrer\" target=\"_blank\">About Alberto Ortiz</a>\r\n                     </li>\r\n                  </ul>\r\n               </div>\r\n            </div>\r\n         </nav>\r\n      </header>\r\n   )\r\n}","import React from \"react\"\r\nimport { Dispatch, SetStateAction, useState } from \"react\"\r\nimport Swal from 'sweetalert2'\r\nimport { Item } from \"../types/Item\"\r\n\r\ntype PropsInfo = {\r\n   item: Item,\r\n   list: Item[],\r\n   setList: Dispatch<SetStateAction<Item[]>>\r\n}\r\n\r\nexport default function Todo({ item, list, setList }: PropsInfo) {\r\n\r\n   const classSuccess = 'success'\r\n   const classNotSuccess = 'warning'\r\n\r\n   const [completed, setCompleted] = useState(classNotSuccess)\r\n   const [buttonClass, setButtonClass] = useState(classSuccess)\r\n\r\n   const updateDone = function () {\r\n      const todoToUpdate = list.filter(todo => todo.id === item.id)\r\n      todoToUpdate[0].done = item.done ? false : true\r\n      if (item.done) {\r\n         setCompleted(classSuccess)\r\n         setButtonClass(classNotSuccess)\r\n      } else {\r\n         setCompleted(classNotSuccess)\r\n         setButtonClass(classSuccess)\r\n      }\r\n   }\r\n\r\n   const deleteTodo = function (): void {\r\n      setList(list.filter(todo => todo.id !== item.id))\r\n   }\r\n\r\n   const deleteAlert = () => {\r\n      Swal.fire({\r\n         title: 'Are you sure?',\r\n         showConfirmButton: false,\r\n         showDenyButton: true,\r\n         showCancelButton: true,\r\n         denyButtonText: `Yes, delete it!`,\r\n      }).then((result) => {\r\n         if(result.isDenied) {\r\n            deleteTodo()\r\n            Swal.fire('ToDo was deleted', '', 'success')\r\n         }\r\n      })\r\n   }\r\n   \r\n   return (\r\n      <article className={`d-flex flex-column flex-lg-row align-items-center justify-content-between bg-light bg-gradient border border-3 p-4 border-${completed} rounded-4 my-2 mx-0`} style={{ width: \"max(90%, 696px)\", minHeight: \"120px\", maxWidth: \"100%\" }}>\r\n\r\n         <div className=\"align-self-start d-flex flex-column align-items-start text-start\" >\r\n            <p className=\"badge bg-dark text-wrap my-0\">{item.timeline.toString()}</p>\r\n            <h4 className=\"text-primary\">{item.title}</h4>\r\n            <p className=\"text-secondary text-wrap\">{item.description}</p>\r\n         </div>\r\n\r\n         <div className=\"d-flex flex-row flex-lg-column justify-content-between gap-2 mx-1\">\r\n            <button type=\"submit\" className={`btn btn-${buttonClass}`} style={{ width: \"125px\" }} onClick={updateDone}>\r\n               {item.done ? \"To complete\" : \"Completed\"}\r\n            </button>\r\n\r\n            <button type=\"submit\" className=\"btn btn-danger col\" style={{ width: \"125px\" }} onClick={deleteAlert}>\r\n               Delete\r\n            </button>\r\n         </div>\r\n\r\n      </article>\r\n   )\r\n}","import React from \"react\"\r\nimport Todo from \"./Todo\"\r\nimport { Dispatch, SetStateAction } from \"react\"\r\nimport { Item } from \"../types/Item\"\r\n\r\nexport type PropsList = {\r\n   list: Item[],\r\n   setList: Dispatch<SetStateAction<Item[]>>\r\n}\r\n\r\nexport default function TaskList(props: PropsList) {\r\n\r\n   const { list, setList } = props\r\n\r\n   const drawTodo = list.map( (item, index) => <Todo key={index} item={item} list={list} setList={setList} />)\r\n   \r\n   return (\r\n      <div className=\"d-flex flex-column align-items-center justify-content-center mt-4\" style={{minWidth:\"75%\"}}>\r\n         {list.length ? drawTodo : <h3>You haven't written any ToDos yet</h3>}\r\n      </div>\r\n   )\r\n}","import React from \"react\"\r\nimport { FormEvent, useRef, useState } from \"react\"\r\n\r\ndeclare type PropsItem = {\r\n   addItem: Function\r\n}\r\n\r\nexport default function NewTodo({ addItem }: PropsItem) {\r\n   \r\n   const [ description, setDescription ] = useState<string>()\r\n   const [ title, setTitle ] = useState<string>()\r\n   const timelineRef = useRef<HTMLInputElement>(null)\r\n\r\n   const handleSubmit = function(e: FormEvent): void {\r\n      \r\n      e.preventDefault()\r\n\r\n      if(!timelineRef.current) throw new Error('timelineRef is not assigned')\r\n      \r\n      addItem({\r\n         id: new Date(),\r\n         title,\r\n         description,\r\n         timeline: new Date(timelineRef.current.value || new Date()).toDateString(),\r\n         done: false\r\n      })\r\n      \r\n      setDescription('')\r\n      setTitle(\"\")\r\n   }\r\n   \r\n   return (\r\n      <form onSubmit={handleSubmit} className=\"mt-5 border border-2 border-info rounded-5 p-5\" style={{maxHeight:\"550px\"}}>\r\n         \r\n         <h2>Create new ToDo</h2>\r\n\r\n         <div className=\"mb-3\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" className=\"form-control\" id=\"title\" value={title} onChange={e => setTitle(e.target.value)}/>\r\n         </div>\r\n\r\n         <div className=\"mb-3\">\r\n            <label htmlFor=\"description\" className=\"form-label\">Description</label>\r\n            <textarea className=\"form-control\" id=\"description\" value={description} onChange={e => setDescription(e.target.value)} rows={4}></textarea>\r\n         </div>\r\n\r\n         <div className=\"mb-3\">\r\n            <label htmlFor=\"timeline\" className=\"form-label\">Date for completition</label>\r\n            <input ref={timelineRef} name=\"timeline\" type=\"date\" className=\"form-control\" id=\"timeline\"/>\r\n         </div>\r\n\r\n         <button type=\"submit\" className=\"btn btn-primary\" disabled={title && description ? false : true}>Add note</button>\r\n\r\n      </form>\r\n   )\r\n}","import React from \"react\"\r\nimport Navbar from \"./partials/Navbar\"\r\nimport TaskList from \"./todo/TaskList\"\r\nimport NewTodo from \"./todo/NewTodo\"\r\nimport { useState } from \"react\"\r\nimport { Item } from \"./types/Item\"\r\n\r\nexport default function App() {\r\n\r\n   const [ list, setList ] = useState<Array<Item>>([])\r\n   \r\n   const addItem = function(newItem: Item): void {\r\n      setList([...list, newItem])\r\n   }\r\n  \r\n   return (\r\n    <main>\r\n\r\n      <Navbar />\r\n\r\n      <div className=\"container text-center d-lg-flex justify-content-around w-75 gap-4\">\r\n         <NewTodo addItem={addItem} />\r\n         <TaskList list={list} setList={setList} />\r\n      </div>\r\n\r\n    </main>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.f4bad5b3.png\";"],"sourceRoot":""}